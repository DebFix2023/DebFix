
benchmark/tcas-argv-fuzz/crashes/crash_1/SC/649:atoi/tcas.649:atoi.sliced.o:	file format ELF64-x86-64


Disassembly of section .text:

0000000000000000 main:
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/tcas.original.aligned.c:629
; {
       0: 55                           	pushq	%rbp
       1: 48 89 e5                     	movq	%rsp, %rbp
       4: 48 83 ec 10                  	subq	$16, %rsp
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/tcas.original.aligned.c:630
;   AFL_INIT_SET0("tcas");
       8: 48 8d 7d fc                  	leaq	-4(%rbp), %rdi
       c: e8 3f 00 00 00               	callq	63 <afl_init_argv>
      11: 48 89 45 f0                  	movq	%rax, -16(%rbp)
      15: 83 7d fc 00                  	cmpl	$0, -4(%rbp)
      19: 75 07                        	jne	7 <main+0x22>
      1b: c7 45 fc 01 00 00 00         	movl	$1, -4(%rbp)
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/tcas.original.aligned.c:635
;     if (argc < 13)
      22: 83 7d fc 0d                  	cmpl	$13, -4(%rbp)
      26: 7c 16                        	jl	22 <main+0x3e>
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/tcas.original.aligned.c:649
;       High_Confidence = atoi(*(argv + 2));
      28: 48 8b 45 f0                  	movq	-16(%rbp), %rax
      2c: 48 8b 78 10                  	movq	16(%rax), %rdi
      30: b0 00                        	movb	$0, %al
      32: e8 00 00 00 00               	callq	0 <main+0x37>
      37: 89 04 25 00 00 00 00         	movl	%eax, 0
      3e: 31 c0                        	xorl	%eax, %eax
      40: 48 83 c4 10                  	addq	$16, %rsp
      44: 5d                           	popq	%rbp
      45: c3                           	retq
      46: 90                           	nop
      47: 90                           	nop
      48: 90                           	nop
      49: 90                           	nop
      4a: 90                           	nop
      4b: 90                           	nop
      4c: 90                           	nop
      4d: 90                           	nop
      4e: 90                           	nop
      4f: 90                           	nop

0000000000000050 afl_init_argv:
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/argv-fuzz-inl.h:48
; static char** afl_init_argv(int* argc) {
      50: 55                           	pushq	%rbp
      51: 48 89 e5                     	movq	%rsp, %rbp
      54: 48 83 ec 20                  	subq	$32, %rsp
      58: 48 89 7d e8                  	movq	%rdi, -24(%rbp)
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/argv-fuzz-inl.h:53
;   char* ptr = in_buf;
      5c: 48 b8 00 00 00 00 00 00 00 00	movabsq	$0, %rax
      66: 48 89 45 f8                  	movq	%rax, -8(%rbp)
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/argv-fuzz-inl.h:54
;   int   rc  = 1; /* start after argv[0] */
      6a: c7 45 f4 01 00 00 00         	movl	$1, -12(%rbp)
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/argv-fuzz-inl.h:58
;   while (*ptr) {
      71: 48 8b 45 f8                  	movq	-8(%rbp), %rax
      75: 80 38 00                     	cmpb	$0, (%rax)
      78: 0f 84 bf 00 00 00            	je	191 <afl_init_argv+0xed>
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/argv-fuzz-inl.h:60
;     ret[rc] = ptr;
      7e: 48 8b 45 f8                  	movq	-8(%rbp), %rax
      82: 48 63 4d f4                  	movslq	-12(%rbp), %rcx
      86: 48 89 04 cd 00 00 00 00      	movq	%rax, (,%rcx,8)
      8e: 31 c0                        	xorl	%eax, %eax
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/argv-fuzz-inl.h:63
;     while (*ptr && !isspace(*ptr)) ptr++;
      90: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
      94: 0f be 09                     	movsbl	(%rcx), %ecx
      97: 83 f9 00                     	cmpl	$0, %ecx
      9a: 74 23                        	je	35 <afl_init_argv+0x6f>
      9c: e8 00 00 00 00               	callq	0 <afl_init_argv+0x51>
      a1: 48 8b 00                     	movq	(%rax), %rax
      a4: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
      a8: 0f be 09                     	movsbl	(%rcx), %ecx
      ab: 48 63 c9                     	movslq	%ecx, %rcx
      ae: 0f b7 04 48                  	movzwl	(%rax,%rcx,2), %eax
      b2: 25 00 20 00 00               	andl	$8192, %eax
      b7: 83 f8 00                     	cmpl	$0, %eax
      ba: 0f 95 c0                     	setne	%al
      bd: 34 ff                        	xorb	$-1, %al
      bf: a8 01                        	testb	$1, %al
      c1: 75 02                        	jne	2 <afl_init_argv+0x75>
      c3: eb 10                        	jmp	16 <afl_init_argv+0x85>
      c5: 48 8b 45 f8                  	movq	-8(%rbp), %rax
      c9: 48 05 01 00 00 00            	addq	$1, %rax
      cf: 48 89 45 f8                  	movq	%rax, -8(%rbp)
      d3: eb b9                        	jmp	-71 <afl_init_argv+0x3e>
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/argv-fuzz-inl.h:64
;     *ptr = '\0';
      d5: 48 8b 45 f8                  	movq	-8(%rbp), %rax
      d9: c6 00 00                     	movb	$0, (%rax)
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/argv-fuzz-inl.h:65
;     ptr++;
      dc: 48 8b 45 f8                  	movq	-8(%rbp), %rax
      e0: 48 05 01 00 00 00            	addq	$1, %rax
      e6: 48 89 45 f8                  	movq	%rax, -8(%rbp)
      ea: 31 c0                        	xorl	%eax, %eax
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/argv-fuzz-inl.h:68
;     while (*ptr && isspace(*ptr)) ptr++;
      ec: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
      f0: 0f be 09                     	movsbl	(%rcx), %ecx
      f3: 83 f9 00                     	cmpl	$0, %ecx
      f6: 74 21                        	je	33 <afl_init_argv+0xc9>
      f8: e8 00 00 00 00               	callq	0 <afl_init_argv+0xad>
      fd: 48 8b 00                     	movq	(%rax), %rax
     100: 48 8b 4d f8                  	movq	-8(%rbp), %rcx
     104: 0f be 09                     	movsbl	(%rcx), %ecx
     107: 48 63 c9                     	movslq	%ecx, %rcx
     10a: 0f b7 04 48                  	movzwl	(%rax,%rcx,2), %eax
     10e: 25 00 20 00 00               	andl	$8192, %eax
     113: 83 f8 00                     	cmpl	$0, %eax
     116: 0f 95 c0                     	setne	%al
     119: a8 01                        	testb	$1, %al
     11b: 75 02                        	jne	2 <afl_init_argv+0xcf>
     11d: eb 10                        	jmp	16 <afl_init_argv+0xdf>
     11f: 48 8b 45 f8                  	movq	-8(%rbp), %rax
     123: 48 05 01 00 00 00            	addq	$1, %rax
     129: 48 89 45 f8                  	movq	%rax, -8(%rbp)
     12d: eb bb                        	jmp	-69 <afl_init_argv+0x9a>
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/argv-fuzz-inl.h:70
;     rc++;
     12f: 8b 45 f4                     	movl	-12(%rbp), %eax
     132: 83 c0 01                     	addl	$1, %eax
     135: 89 45 f4                     	movl	%eax, -12(%rbp)
     138: e9 34 ff ff ff               	jmp	-204 <afl_init_argv+0x21>
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/argv-fuzz-inl.h:73
;   *argc = rc;
     13d: 8b 45 f4                     	movl	-12(%rbp), %eax
     140: 48 8b 4d e8                  	movq	-24(%rbp), %rcx
     144: 89 01                        	movl	%eax, (%rcx)
; /home/isabel0715/workspace/CrashRepair/benchmark/tcas-argv-fuzz/src/argv-fuzz-inl.h:75
;   return ret;
     146: 48 b8 00 00 00 00 00 00 00 00	movabsq	$0, %rax
     150: 48 83 c4 20                  	addq	$32, %rsp
     154: 5d                           	popq	%rbp
     155: c3                           	retq
